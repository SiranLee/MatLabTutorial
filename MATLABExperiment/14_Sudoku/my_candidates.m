function [C,N] = my_candidates(X)
% CANDIDATES(X): 求X中每个未确定方格的待选元素
%   C(i,j)表示X(i,j)方格的待选元素,C是一个元胞数组
%   N(i）表示按列索引到C(i,j)的C(i,j)中的元胞长度，即待选元素的个数，是一个行向量
    tri = @(k) 3*ceil(k/3-1)+(1:3); % 定位block,实际上就是定位一个3-by-3的矩阵在原来(1:3)的基础上进行偏移。ceil(k/3-1)算得在第几个block
    C = cell(9,9);
    for j = 1:9
        for i = 1:9 % 由于matlab习惯于按列来遍历，所以这里最外层循环是j
            % 这里要确定X中每个未确定元素的方格的待选元素
            % 首先判断当前方格是否已经确定了元素
            if X(i,j) == 0
                % 大致思路: 先求该方格所在行的可选元素；再求该方格所在列的可选元素；最后求该方格所在block内的可选元素
                % 不可选用0表示
                z = 1:9;
                % nonezeros(X(i,:))按列得到X中第i行的非零元素，这些元素的范围是1-9
                % 将这些元素作为索引取索引z,而z的索引实际上就是其元素值
                % 将索引到的值置零实际上就是表示这些非零元素不能再被使用了
                z(nonzeros(X(i,:))) = 0; % 得到X(i,j)这个位置在行方向上还可以填的数字
                z(nonzeros(X(:,j))) = 0; % 得到X(i,j)这个位置在列方向上还可以填的数字
                z(nonzeros(X(tri(i),tri(j)))) = 0; % X(tri(i),tri(j))表示X(i,j)所在的块
                % z中还剩下的非零的元素就是X(i,j)待填的元素
                C{i,j} = nonzeros(z)'; % 因为nonzero返回的是列向量，所以这里需要转置一下
            end
        end
    end
    % 对C中每个元胞进行求其长度的操作
    % N是与C同型的矩阵，N(i,j)表示元胞C(i,j)的长度
    N = cellfun(@length,C);
    N(X>0) = inf; % 对已经确定的X(i,j)赋值为inf，不赋值为0是为了与不存在该位置的待选元素(即无解)的情况区分开
    N = N(:)'; % 将矩阵转化为行元素
end