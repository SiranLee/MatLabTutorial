%% 矩阵的除法有两种，一种是右除/，另一种是左除\
% B\A: B*inverse(A);B/A: inverse(B)*A
% 如果是右除，就把右边矩阵取逆再相乘；如果是左除，就把左边矩阵取逆再相乘
% 对于标量无所谓右除和左除
% 对于向量就要注意左除和右除，因为向量不可逆
A = [1,2,3;4,5,6;7,8,9];
B = [4,3,2;7,5,1;12,7,92];
C1 = B\A;% 左除
C2 = B/A;% 右除

%%  乘方运算 A^x,其中A为方阵，x为标量
A = [1,2,3;4,5,6;7,8,0];
A^2

%% 点运算：两个矩阵进行点运算，是指两个矩阵对应元素进行运算，因此要求两个矩阵是同型的
%  点运算包括：.*,.\,./,.^\
x = 0.1:.3:1
y = sin(x)*cos(x)% 这里报错，因为两个向量相乘
y = sin(x).*cos(x)
% 两同维度的行列向量做 .* 得出一个矩阵,该矩阵行向量是行列向量中行向量的k倍
%     两不同维度的向量只能做 .* 需要把其中一个转化为列向量，然后按照上述规则来运算
% 两同维度的行列向量做 * 是对这两个向量做线性组合，得出一个数
% 
%% 关系运算（大于小于类的）
% 当参与比较的量是两个同型的矩阵时，比较是对两矩阵相同位置的元素进行逐个比较，最终是一个binary的矩阵
% 当参与比较的是一个标量和一个矩阵时，比较是将标量与矩阵每个元素进行逐个比较，最终还是一个binary的矩阵
A = [24,35,13;22,63,23;39,47,80]
% 这里有必要说一下rem(x,y)与mod(x,y),二者都可用于求余数,但有区别
% 其中x是被除数，y是除数
% 当x,y符号相同时，rem(x,y) = mod(x,y)
% 当x,y符号不同时，mod(x,y) = rem(x,y) + y
% 当希望得到的余数结果的符号与x中对应被除数相同时，用rem
% 当希望得到的余数结果的符号与y(除数)相同时，用mod
P = rem(A,2)==0

%% 逻辑运算
% 逻辑运算规则思想同关系运算相同
% 算术运算优先级最高，逻辑运算优先级最低，但是非运算是单目运算，比算术运算优先级高


%% 综合练习：求全部的水仙花数
m = 100:999;
m1 = rem(m,10);% 求得每个数的个位数字.是一个向量
m2 = rem(fix(m/10),10);% 求得每个数的十位数字,是一个向量
m3 = fix(m/100); % 求得每个数的百位数字，是一个向量
% fix用来对一个矩阵或者向量中的每个元素进行取整，即直接抹掉小数部分
% round用来对一个矩阵或者向量中的每个元素进行取整，采取四舍五入的方式进行
% floor也是用来取整的函数，规则为不超过该数的最大整数
% ceil用来取整，规则为超过该数的最小整数
% find函数用来求矩阵中非0元素的位置，也可以根据条件找元素，返回的是元素的索引
indexes = find(m==m1.^3+m2.^3+m3.^3);% 因为m1，m2，m3都是向量所以需要点乘
m(indexes);

%% 补: cell数组
% cell数组使用大括号建立，元素与元素之间使用逗号或者空格隔开，隔开的每个元素是一个cell
% cell数组使用{}或者()来索引，使用大括号可以直接获取到对应cell中的值，而使用小括号只能获取到该cell对象











